# Commit

Saving a version of all of the files in your repository is called a "commit". To do so, click the "Commit" button in the Git pane. It will open another window showing you all of the files that have changed and their difference from previous versions: green means that something has been added and red means that something has been removed.

Click the little box in the "Staged" column next to a file or files, then type a little note as to what you've changed in the "Commit message" box. Then click the "Commit" button *et voilÃ *! These frozen snapshots of differences in your code or text will be stored on your computer and can be accessed later if necessary.

From [Happy Git](https://happygitwithr.com/git-basics.html):

> The daily workflow is probably not dramatically different from what you do currently. You work in the usual way, writing R scripts or authoring reports in LaTeX or R Markdown. But instead of only *saving* individual files, periodically you make a **commit**, which takes a snapshot of all the files in the entire project. If you have ever versioned a file [by adding your initials or the date](http://www.phdcomics.com/comics/archive.php?comicid=1531), you have effectively made a commit, albeit only for a single file. It is a version that is significant to you and that you might want to inspect or revert to later. Periodically, you push commits to GitHub. This is like sharing a document with colleagues on DropBox or sending it out as an email attachment. By pushing to GitHub, you make your work and all your accumulated progress accessible to others.

Don't be afraid to "commit" changes early and often -- think of these as breadcrumbs leading you back from where you came. If you're confident you can get back there, no need to commit everything. If you're trailblazing through uncharted territory, you probably want to commit more often.
